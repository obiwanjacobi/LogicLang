//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CuplLexer.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Jacobi.CuplLang.Parser {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class CuplLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Comments=1, Assembly=2, Company=3, Date=4, Designer=5, Device=6, Format=7, 
		Location=8, Name=9, Partno=10, Revision=11, Pin=12, Append=13, Extension=14, 
		Symbol=15, Number=16, DontCareNumber=17, PrefixHex=18, PrefixOctal=19, 
		PrefixDecimal=20, PrefixBinary=21, Include=22, Define=23, UnDef=24, IfDef=25, 
		IfNotDef=26, EndIf=27, Else=28, Repeat=29, RepEnd=30, Macro=31, MEnd=32, 
		Eq=33, LogicNot=34, LogicAnd=35, LogicOr=36, SemiColon=37, Comma=38, Dot=39, 
		Range=40, BracketOpen=41, BracketClose=42, ParenOpen=43, ParenClose=44, 
		Dollar=45, Quote=46, WS=47, EndUseSpaces=48, FreeText=49;
	public const int
		UseSpaces=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "UseSpaces"
	};

	public static readonly string[] ruleNames = {
		"Comments", "Assembly", "Company", "Date", "Designer", "Device", "Format", 
		"Location", "Name", "Partno", "Revision", "Pin", "Append", "Extension", 
		"Symbol", "Number", "DontCareNumber", "PrefixHex", "PrefixOctal", "PrefixDecimal", 
		"PrefixBinary", "ALPHA", "DIGIT10", "A", "B", "C", "D", "E", "F", "G", 
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
		"V", "W", "X", "Y", "Z", "Include", "Define", "UnDef", "IfDef", "IfNotDef", 
		"EndIf", "Else", "Repeat", "RepEnd", "Macro", "MEnd", "Eq", "LogicNot", 
		"LogicAnd", "LogicOr", "SemiColon", "Comma", "Dot", "Range", "BracketOpen", 
		"BracketClose", "ParenOpen", "ParenClose", "Dollar", "Quote", "WS", "EndUseSpaces", 
		"FreeText"
	};


	public CuplLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CuplLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "'INCLUDE'", 
		"'DEFINE'", "'UNDEF'", "'IFDEF'", "'IFNDEF'", "'ENDIF'", "'ELSE'", "'REPEAT'", 
		"'REPEND'", "'MACRO'", "'MEND'", "'='", "'!'", "'&'", "'#'", null, "','", 
		"'.'", "'..'", "'['", "']'", "'('", "')'", "'$'", "'''"
	};
	private static readonly string[] _SymbolicNames = {
		null, "Comments", "Assembly", "Company", "Date", "Designer", "Device", 
		"Format", "Location", "Name", "Partno", "Revision", "Pin", "Append", "Extension", 
		"Symbol", "Number", "DontCareNumber", "PrefixHex", "PrefixOctal", "PrefixDecimal", 
		"PrefixBinary", "Include", "Define", "UnDef", "IfDef", "IfNotDef", "EndIf", 
		"Else", "Repeat", "RepEnd", "Macro", "MEnd", "Eq", "LogicNot", "LogicAnd", 
		"LogicOr", "SemiColon", "Comma", "Dot", "Range", "BracketOpen", "BracketClose", 
		"ParenOpen", "ParenClose", "Dollar", "Quote", "WS", "EndUseSpaces", "FreeText"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CuplLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CuplLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,49,487,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
		2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
		2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
		2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,
		2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,
		2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,
		1,0,1,0,1,0,1,0,5,0,161,8,0,10,0,12,0,164,9,0,1,0,1,0,1,0,1,0,1,0,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
		2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
		1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
		7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
		1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,
		1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,280,8,13,1,14,1,14,1,14,5,
		14,285,8,14,10,14,12,14,288,9,14,1,15,4,15,291,8,15,11,15,12,15,292,1,
		16,1,16,4,16,297,8,16,11,16,12,16,298,1,17,1,17,1,17,1,17,1,18,1,18,1,
		18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,
		23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
		30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,
		37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,
		44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,49,1,
		49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,
		51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,
		53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,
		56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,
		58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,61,1,61,1,
		62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,67,1,68,1,
		68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,4,74,473,8,74,
		11,74,12,74,474,1,74,1,74,1,75,1,75,1,75,1,75,1,76,4,76,484,8,76,11,76,
		12,76,485,2,162,485,0,77,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,
		22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,0,
		46,0,48,0,50,0,52,0,54,0,56,0,58,0,60,0,62,0,64,0,66,0,68,0,70,0,72,0,
		74,0,76,0,78,0,80,0,82,0,84,0,86,0,88,0,90,0,92,0,94,0,96,0,98,0,100,22,
		102,23,104,24,106,25,108,26,110,27,112,28,114,29,116,30,118,31,120,32,
		122,33,124,34,126,35,128,36,130,37,132,38,134,39,136,40,138,41,140,42,
		142,43,144,44,146,45,148,46,150,47,152,48,154,49,2,0,1,29,2,0,65,90,97,
		122,1,0,48,57,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,
		100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
		104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,
		108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,
		112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
		116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,
		120,120,2,0,89,89,121,121,2,0,90,90,122,122,3,0,9,10,13,13,32,32,468,0,
		2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,
		0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,
		1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,
		0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,100,1,0,0,0,0,
		102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,
		112,1,0,0,0,0,114,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,
		122,1,0,0,0,0,124,1,0,0,0,0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,0,0,0,
		132,1,0,0,0,0,134,1,0,0,0,0,136,1,0,0,0,0,138,1,0,0,0,0,140,1,0,0,0,0,
		142,1,0,0,0,0,144,1,0,0,0,0,146,1,0,0,0,0,148,1,0,0,0,0,150,1,0,0,0,1,
		152,1,0,0,0,1,154,1,0,0,0,2,156,1,0,0,0,4,170,1,0,0,0,6,181,1,0,0,0,8,
		191,1,0,0,0,10,198,1,0,0,0,12,209,1,0,0,0,14,216,1,0,0,0,16,223,1,0,0,
		0,18,234,1,0,0,0,20,241,1,0,0,0,22,250,1,0,0,0,24,261,1,0,0,0,26,265,1,
		0,0,0,28,279,1,0,0,0,30,281,1,0,0,0,32,290,1,0,0,0,34,296,1,0,0,0,36,300,
		1,0,0,0,38,304,1,0,0,0,40,308,1,0,0,0,42,312,1,0,0,0,44,316,1,0,0,0,46,
		318,1,0,0,0,48,320,1,0,0,0,50,322,1,0,0,0,52,324,1,0,0,0,54,326,1,0,0,
		0,56,328,1,0,0,0,58,330,1,0,0,0,60,332,1,0,0,0,62,334,1,0,0,0,64,336,1,
		0,0,0,66,338,1,0,0,0,68,340,1,0,0,0,70,342,1,0,0,0,72,344,1,0,0,0,74,346,
		1,0,0,0,76,348,1,0,0,0,78,350,1,0,0,0,80,352,1,0,0,0,82,354,1,0,0,0,84,
		356,1,0,0,0,86,358,1,0,0,0,88,360,1,0,0,0,90,362,1,0,0,0,92,364,1,0,0,
		0,94,366,1,0,0,0,96,368,1,0,0,0,98,370,1,0,0,0,100,372,1,0,0,0,102,380,
		1,0,0,0,104,387,1,0,0,0,106,393,1,0,0,0,108,399,1,0,0,0,110,406,1,0,0,
		0,112,412,1,0,0,0,114,417,1,0,0,0,116,424,1,0,0,0,118,431,1,0,0,0,120,
		437,1,0,0,0,122,442,1,0,0,0,124,444,1,0,0,0,126,446,1,0,0,0,128,448,1,
		0,0,0,130,450,1,0,0,0,132,452,1,0,0,0,134,454,1,0,0,0,136,456,1,0,0,0,
		138,459,1,0,0,0,140,461,1,0,0,0,142,463,1,0,0,0,144,465,1,0,0,0,146,467,
		1,0,0,0,148,469,1,0,0,0,150,472,1,0,0,0,152,478,1,0,0,0,154,483,1,0,0,
		0,156,157,5,47,0,0,157,158,5,42,0,0,158,162,1,0,0,0,159,161,9,0,0,0,160,
		159,1,0,0,0,161,164,1,0,0,0,162,163,1,0,0,0,162,160,1,0,0,0,163,165,1,
		0,0,0,164,162,1,0,0,0,165,166,5,42,0,0,166,167,5,47,0,0,167,168,1,0,0,
		0,168,169,6,0,0,0,169,3,1,0,0,0,170,171,3,48,23,0,171,172,3,84,41,0,172,
		173,3,84,41,0,173,174,3,56,27,0,174,175,3,72,35,0,175,176,3,50,24,0,176,
		177,3,70,34,0,177,178,3,96,47,0,178,179,1,0,0,0,179,180,6,1,1,0,180,5,
		1,0,0,0,181,182,3,52,25,0,182,183,3,76,37,0,183,184,3,72,35,0,184,185,
		3,78,38,0,185,186,3,48,23,0,186,187,3,74,36,0,187,188,3,96,47,0,188,189,
		1,0,0,0,189,190,6,2,1,0,190,7,1,0,0,0,191,192,3,54,26,0,192,193,3,48,23,
		0,193,194,3,86,42,0,194,195,3,56,27,0,195,196,1,0,0,0,196,197,6,3,1,0,
		197,9,1,0,0,0,198,199,3,54,26,0,199,200,3,56,27,0,200,201,3,84,41,0,201,
		202,3,64,31,0,202,203,3,60,29,0,203,204,3,74,36,0,204,205,3,56,27,0,205,
		206,3,82,40,0,206,207,1,0,0,0,207,208,6,4,1,0,208,11,1,0,0,0,209,210,3,
		54,26,0,210,211,3,56,27,0,211,212,3,90,44,0,212,213,3,64,31,0,213,214,
		3,52,25,0,214,215,3,56,27,0,215,13,1,0,0,0,216,217,3,58,28,0,217,218,3,
		76,37,0,218,219,3,82,40,0,219,220,3,72,35,0,220,221,3,48,23,0,221,222,
		3,86,42,0,222,15,1,0,0,0,223,224,3,70,34,0,224,225,3,76,37,0,225,226,3,
		52,25,0,226,227,3,48,23,0,227,228,3,86,42,0,228,229,3,64,31,0,229,230,
		3,76,37,0,230,231,3,74,36,0,231,232,1,0,0,0,232,233,6,7,1,0,233,17,1,0,
		0,0,234,235,3,74,36,0,235,236,3,48,23,0,236,237,3,72,35,0,237,238,3,56,
		27,0,238,239,1,0,0,0,239,240,6,8,1,0,240,19,1,0,0,0,241,242,3,78,38,0,
		242,243,3,48,23,0,243,244,3,82,40,0,244,245,3,86,42,0,245,246,3,74,36,
		0,246,247,3,76,37,0,247,248,1,0,0,0,248,249,6,9,1,0,249,21,1,0,0,0,250,
		251,3,82,40,0,251,252,3,56,27,0,252,253,3,90,44,0,253,254,3,64,31,0,254,
		255,3,84,41,0,255,256,3,64,31,0,256,257,3,76,37,0,257,258,3,74,36,0,258,
		259,1,0,0,0,259,260,6,10,1,0,260,23,1,0,0,0,261,262,3,78,38,0,262,263,
		3,64,31,0,263,264,3,74,36,0,264,25,1,0,0,0,265,266,3,48,23,0,266,267,3,
		78,38,0,267,268,3,78,38,0,268,269,3,56,27,0,269,270,3,74,36,0,270,271,
		3,54,26,0,271,27,1,0,0,0,272,280,5,100,0,0,273,274,5,111,0,0,274,280,5,
		101,0,0,275,276,5,97,0,0,276,280,5,114,0,0,277,278,5,115,0,0,278,280,5,
		112,0,0,279,272,1,0,0,0,279,273,1,0,0,0,279,275,1,0,0,0,279,277,1,0,0,
		0,280,29,1,0,0,0,281,286,3,44,21,0,282,285,3,44,21,0,283,285,3,46,22,0,
		284,282,1,0,0,0,284,283,1,0,0,0,285,288,1,0,0,0,286,284,1,0,0,0,286,287,
		1,0,0,0,287,31,1,0,0,0,288,286,1,0,0,0,289,291,3,46,22,0,290,289,1,0,0,
		0,291,292,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,33,1,0,0,0,294,297,
		3,46,22,0,295,297,5,88,0,0,296,294,1,0,0,0,296,295,1,0,0,0,297,298,1,0,
		0,0,298,296,1,0,0,0,298,299,1,0,0,0,299,35,1,0,0,0,300,301,3,148,73,0,
		301,302,3,62,30,0,302,303,3,148,73,0,303,37,1,0,0,0,304,305,3,148,73,0,
		305,306,3,76,37,0,306,307,3,148,73,0,307,39,1,0,0,0,308,309,3,148,73,0,
		309,310,3,54,26,0,310,311,3,148,73,0,311,41,1,0,0,0,312,313,3,148,73,0,
		313,314,3,50,24,0,314,315,3,148,73,0,315,43,1,0,0,0,316,317,7,0,0,0,317,
		45,1,0,0,0,318,319,7,1,0,0,319,47,1,0,0,0,320,321,7,2,0,0,321,49,1,0,0,
		0,322,323,7,3,0,0,323,51,1,0,0,0,324,325,7,4,0,0,325,53,1,0,0,0,326,327,
		7,5,0,0,327,55,1,0,0,0,328,329,7,6,0,0,329,57,1,0,0,0,330,331,7,7,0,0,
		331,59,1,0,0,0,332,333,7,8,0,0,333,61,1,0,0,0,334,335,7,9,0,0,335,63,1,
		0,0,0,336,337,7,10,0,0,337,65,1,0,0,0,338,339,7,11,0,0,339,67,1,0,0,0,
		340,341,7,12,0,0,341,69,1,0,0,0,342,343,7,13,0,0,343,71,1,0,0,0,344,345,
		7,14,0,0,345,73,1,0,0,0,346,347,7,15,0,0,347,75,1,0,0,0,348,349,7,16,0,
		0,349,77,1,0,0,0,350,351,7,17,0,0,351,79,1,0,0,0,352,353,7,18,0,0,353,
		81,1,0,0,0,354,355,7,19,0,0,355,83,1,0,0,0,356,357,7,20,0,0,357,85,1,0,
		0,0,358,359,7,21,0,0,359,87,1,0,0,0,360,361,7,22,0,0,361,89,1,0,0,0,362,
		363,7,23,0,0,363,91,1,0,0,0,364,365,7,24,0,0,365,93,1,0,0,0,366,367,7,
		25,0,0,367,95,1,0,0,0,368,369,7,26,0,0,369,97,1,0,0,0,370,371,7,27,0,0,
		371,99,1,0,0,0,372,373,5,73,0,0,373,374,5,78,0,0,374,375,5,67,0,0,375,
		376,5,76,0,0,376,377,5,85,0,0,377,378,5,68,0,0,378,379,5,69,0,0,379,101,
		1,0,0,0,380,381,5,68,0,0,381,382,5,69,0,0,382,383,5,70,0,0,383,384,5,73,
		0,0,384,385,5,78,0,0,385,386,5,69,0,0,386,103,1,0,0,0,387,388,5,85,0,0,
		388,389,5,78,0,0,389,390,5,68,0,0,390,391,5,69,0,0,391,392,5,70,0,0,392,
		105,1,0,0,0,393,394,5,73,0,0,394,395,5,70,0,0,395,396,5,68,0,0,396,397,
		5,69,0,0,397,398,5,70,0,0,398,107,1,0,0,0,399,400,5,73,0,0,400,401,5,70,
		0,0,401,402,5,78,0,0,402,403,5,68,0,0,403,404,5,69,0,0,404,405,5,70,0,
		0,405,109,1,0,0,0,406,407,5,69,0,0,407,408,5,78,0,0,408,409,5,68,0,0,409,
		410,5,73,0,0,410,411,5,70,0,0,411,111,1,0,0,0,412,413,5,69,0,0,413,414,
		5,76,0,0,414,415,5,83,0,0,415,416,5,69,0,0,416,113,1,0,0,0,417,418,5,82,
		0,0,418,419,5,69,0,0,419,420,5,80,0,0,420,421,5,69,0,0,421,422,5,65,0,
		0,422,423,5,84,0,0,423,115,1,0,0,0,424,425,5,82,0,0,425,426,5,69,0,0,426,
		427,5,80,0,0,427,428,5,69,0,0,428,429,5,78,0,0,429,430,5,68,0,0,430,117,
		1,0,0,0,431,432,5,77,0,0,432,433,5,65,0,0,433,434,5,67,0,0,434,435,5,82,
		0,0,435,436,5,79,0,0,436,119,1,0,0,0,437,438,5,77,0,0,438,439,5,69,0,0,
		439,440,5,78,0,0,440,441,5,68,0,0,441,121,1,0,0,0,442,443,5,61,0,0,443,
		123,1,0,0,0,444,445,5,33,0,0,445,125,1,0,0,0,446,447,5,38,0,0,447,127,
		1,0,0,0,448,449,5,35,0,0,449,129,1,0,0,0,450,451,5,59,0,0,451,131,1,0,
		0,0,452,453,5,44,0,0,453,133,1,0,0,0,454,455,5,46,0,0,455,135,1,0,0,0,
		456,457,5,46,0,0,457,458,5,46,0,0,458,137,1,0,0,0,459,460,5,91,0,0,460,
		139,1,0,0,0,461,462,5,93,0,0,462,141,1,0,0,0,463,464,5,40,0,0,464,143,
		1,0,0,0,465,466,5,41,0,0,466,145,1,0,0,0,467,468,5,36,0,0,468,147,1,0,
		0,0,469,470,5,39,0,0,470,149,1,0,0,0,471,473,7,28,0,0,472,471,1,0,0,0,
		473,474,1,0,0,0,474,472,1,0,0,0,474,475,1,0,0,0,475,476,1,0,0,0,476,477,
		6,74,0,0,477,151,1,0,0,0,478,479,5,59,0,0,479,480,1,0,0,0,480,481,6,75,
		2,0,481,153,1,0,0,0,482,484,9,0,0,0,483,482,1,0,0,0,484,485,1,0,0,0,485,
		486,1,0,0,0,485,483,1,0,0,0,486,155,1,0,0,0,11,0,1,162,279,284,286,292,
		296,298,474,485,3,6,0,0,2,1,0,2,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Jacobi.CuplLang.Parser
